{"version":3,"file":"socket.io-parser.js","sources":["../../../node_modules/socket.io-parser/build/esm/is-binary.js","../../../node_modules/socket.io-parser/build/esm/binary.js","../../../node_modules/socket.io-parser/build/esm/index.js"],"sourcesContent":["const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    delete packet.attachments; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * These strings must not be used as event names, as they have a special meaning.\n */\nconst RESERVED_EVENTS = [\n    \"connect\",\n    \"connect_error\",\n    \"disconnect\",\n    \"disconnecting\",\n    \"newListener\",\n    \"removeListener\", // used by the Node.js EventEmitter\n];\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                return this.encodeAsBinary({\n                    type: obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK,\n                    nsp: obj.nsp,\n                    data: obj.data,\n                    id: obj.id,\n                });\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n// see https://stackoverflow.com/questions/8511281/check-if-a-value-is-an-object-in-javascript\nfunction isObject(value) {\n    return Object.prototype.toString.call(value) === \"[object Object]\";\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            const isBinaryEvent = packet.type === PacketType.BINARY_EVENT;\n            if (isBinaryEvent || packet.type === PacketType.BINARY_ACK) {\n                packet.type = isBinaryEvent ? PacketType.EVENT : PacketType.ACK;\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return isObject(payload);\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || isObject(payload);\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return (Array.isArray(payload) &&\n                    (typeof payload[0] === \"number\" ||\n                        (typeof payload[0] === \"string\" &&\n                            RESERVED_EVENTS.indexOf(payload[0]) === -1)));\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n            this.reconstructor = null;\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n"],"names":["withNativeArrayBuffer","ArrayBuffer","isView","obj","buffer","toString","Object","prototype","withNativeBlob","Blob","call","withNativeFile","File","isBinary","hasBinary","toJSON","Array","isArray","i","l","length","arguments","key","hasOwnProperty","deconstructPacket","packet","buffers","packetData","data","pack","_deconstructPacket","attachments","placeholder","_placeholder","num","push","newData","Date","reconstructPacket","_reconstructPacket","isIndexValid","Error","RESERVED_EVENTS","protocol","PacketType","Encoder","constructor","replacer","encode","type","EVENT","ACK","encodeAsBinary","BINARY_EVENT","BINARY_ACK","nsp","id","encodeAsString","str","JSON","stringify","deconstruction","unshift","isObject","value","Decoder","Emitter","reviver","add","reconstructor","decodeString","isBinaryEvent","BinaryReconstructor","emitReserved","base64","takeBinaryData","p","Number","charAt","undefined","start","buf","substring","c","next","payload","tryParse","substr","isPayloadValid","parse","e","CONNECT","DISCONNECT","CONNECT_ERROR","indexOf","destroy","finishedReconstruction","reconPack","binData"],"mappings":"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","x_google_ignoreList":[0,1,2]}