{"version":3,"file":"socket.io-client.js","sources":["../../../node_modules/socket.io-client/build/esm/url.js","../../../node_modules/socket.io-client/build/esm/on.js","../../../node_modules/socket.io-client/build/esm/socket.js","../../../node_modules/socket.io-client/build/esm/contrib/backo2.js","../../../node_modules/socket.io-client/build/esm/manager.js","../../../node_modules/socket.io-client/build/esm/index.js"],"sourcesContent":["import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\n/**\n * A Socket is the fundamental class for interacting with the server.\n *\n * A Socket belongs to a certain Namespace (by default /) and uses an underlying {@link Manager} to communicate.\n *\n * @example\n * const socket = io();\n *\n * socket.on(\"connect\", () => {\n *   console.log(\"connected\");\n * });\n *\n * // send an event to the server\n * socket.emit(\"foo\", \"bar\");\n *\n * socket.on(\"foobar\", () => {\n *   // an event was received from the server\n * });\n *\n * // upon disconnection\n * socket.on(\"disconnect\", (reason) => {\n *   console.log(`disconnected due to ${reason}`);\n * });\n */\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     */\n    constructor(io, nsp, opts) {\n        super();\n        /**\n         * Whether the socket is currently connected to the server.\n         *\n         * @example\n         * const socket = io();\n         *\n         * socket.on(\"connect\", () => {\n         *   console.log(socket.connected); // true\n         * });\n         *\n         * socket.on(\"disconnect\", () => {\n         *   console.log(socket.connected); // false\n         * });\n         */\n        this.connected = false;\n        /**\n         * Whether the connection state was recovered after a temporary disconnection. In that case, any missed packets will\n         * be transmitted by the server.\n         */\n        this.recovered = false;\n        /**\n         * Buffer for packets received before the CONNECT packet\n         */\n        this.receiveBuffer = [];\n        /**\n         * Buffer for packets that will be sent once the socket is connected\n         */\n        this.sendBuffer = [];\n        /**\n         * The queue of packets to be sent with retry in case of failure.\n         *\n         * Packets are sent one by one, each waiting for the server acknowledgement, in order to guarantee the delivery order.\n         * @private\n         */\n        this._queue = [];\n        /**\n         * A sequence to generate the ID of the {@link QueuedPacket}.\n         * @private\n         */\n        this._queueSeq = 0;\n        this.ids = 0;\n        /**\n         * A map containing acknowledgement handlers.\n         *\n         * The `withError` attribute is used to differentiate handlers that accept an error as first argument:\n         *\n         * - `socket.emit(\"test\", (err, value) => { ... })` with `ackTimeout` option\n         * - `socket.timeout(5000).emit(\"test\", (err, value) => { ... })`\n         * - `const value = await socket.emitWithAck(\"test\")`\n         *\n         * From those that don't:\n         *\n         * - `socket.emit(\"test\", (value) => { ... });`\n         *\n         * In the first case, the handlers will be called with an error when:\n         *\n         * - the timeout is reached\n         * - the socket gets disconnected\n         *\n         * In the second case, the handlers will be simply discarded upon disconnection, since the client will never receive\n         * an acknowledgement from the server.\n         *\n         * @private\n         */\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        this._opts = Object.assign({}, opts);\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"connect\", () => {\n     *   console.log(socket.disconnected); // false\n     * });\n     *\n     * socket.on(\"disconnect\", () => {\n     *   console.log(socket.disconnected); // true\n     * });\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects.\n     *\n     * @example\n     * const socket = io();\n     *\n     * console.log(socket.active); // true\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   if (reason === \"io server disconnect\") {\n     *     // the disconnection was initiated by the server, you need to manually reconnect\n     *     console.log(socket.active); // false\n     *   }\n     *   // else the socket will automatically try to reconnect\n     *   console.log(socket.active); // true\n     * });\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @example\n     * const socket = io({\n     *   autoConnect: false\n     * });\n     *\n     * socket.connect();\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for {@link connect()}.\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * This method mimics the WebSocket.send() method.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\n     *\n     * @example\n     * socket.send(\"hello\");\n     *\n     * // this is equivalent to\n     * socket.emit(\"message\", \"hello\");\n     *\n     * @return self\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @example\n     * socket.emit(\"hello\", \"world\");\n     *\n     * // all serializable datastructures are supported (no need to call JSON.stringify)\n     * socket.emit(\"hello\", 1, \"2\", { 3: [\"4\"], 5: Uint8Array.from([6]) });\n     *\n     * // with an acknowledgement from the server\n     * socket.emit(\"hello\", \"world\", (val) => {\n     *   // ...\n     * });\n     *\n     * @return self\n     */\n    emit(ev, ...args) {\n        var _a, _b, _c;\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev.toString() + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        if (this._opts.retries && !this.flags.fromQueue && !this.flags.volatile) {\n            this._addToQueue(args);\n            return this;\n        }\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = (_b = (_a = this.io.engine) === null || _a === void 0 ? void 0 : _a.transport) === null || _b === void 0 ? void 0 : _b.writable;\n        const isConnected = this.connected && !((_c = this.io.engine) === null || _c === void 0 ? void 0 : _c._hasPingExpired());\n        const discardPacket = this.flags.volatile && !isTransportWritable;\n        if (discardPacket) {\n        }\n        else if (isConnected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        var _a;\n        const timeout = (_a = this.flags.timeout) !== null && _a !== void 0 ? _a : this._opts.ackTimeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        const fn = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, args);\n        };\n        fn.withError = true;\n        this.acks[id] = fn;\n    }\n    /**\n     * Emits an event and waits for an acknowledgement\n     *\n     * @example\n     * // without timeout\n     * const response = await socket.emitWithAck(\"hello\", \"world\");\n     *\n     * // with a specific timeout\n     * try {\n     *   const response = await socket.timeout(1000).emitWithAck(\"hello\", \"world\");\n     * } catch (err) {\n     *   // the server did not acknowledge the event in the given delay\n     * }\n     *\n     * @return a Promise that will be fulfilled when the server acknowledges the event\n     */\n    emitWithAck(ev, ...args) {\n        return new Promise((resolve, reject) => {\n            const fn = (arg1, arg2) => {\n                return arg1 ? reject(arg1) : resolve(arg2);\n            };\n            fn.withError = true;\n            args.push(fn);\n            this.emit(ev, ...args);\n        });\n    }\n    /**\n     * Add the packet to the queue.\n     * @param args\n     * @private\n     */\n    _addToQueue(args) {\n        let ack;\n        if (typeof args[args.length - 1] === \"function\") {\n            ack = args.pop();\n        }\n        const packet = {\n            id: this._queueSeq++,\n            tryCount: 0,\n            pending: false,\n            args,\n            flags: Object.assign({ fromQueue: true }, this.flags),\n        };\n        args.push((err, ...responseArgs) => {\n            if (packet !== this._queue[0]) {\n                // the packet has already been acknowledged\n                return;\n            }\n            const hasError = err !== null;\n            if (hasError) {\n                if (packet.tryCount > this._opts.retries) {\n                    this._queue.shift();\n                    if (ack) {\n                        ack(err);\n                    }\n                }\n            }\n            else {\n                this._queue.shift();\n                if (ack) {\n                    ack(null, ...responseArgs);\n                }\n            }\n            packet.pending = false;\n            return this._drainQueue();\n        });\n        this._queue.push(packet);\n        this._drainQueue();\n    }\n    /**\n     * Send the first packet of the queue, and wait for an acknowledgement from the server.\n     * @param force - whether to resend a packet that has not been acknowledged yet\n     *\n     * @private\n     */\n    _drainQueue(force = false) {\n        if (!this.connected || this._queue.length === 0) {\n            return;\n        }\n        const packet = this._queue[0];\n        if (packet.pending && !force) {\n            return;\n        }\n        packet.pending = true;\n        packet.tryCount++;\n        this.flags = packet.flags;\n        this.emit.apply(this, packet.args);\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this._sendConnectPacket(data);\n            });\n        }\n        else {\n            this._sendConnectPacket(this.auth);\n        }\n    }\n    /**\n     * Sends a CONNECT packet to initiate the Socket.IO session.\n     *\n     * @param data\n     * @private\n     */\n    _sendConnectPacket(data) {\n        this.packet({\n            type: PacketType.CONNECT,\n            data: this._pid\n                ? Object.assign({ pid: this._pid, offset: this._lastOffset }, data)\n                : data,\n        });\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n        this._clearAcks();\n    }\n    /**\n     * Clears the acknowledgement handlers upon disconnection, since the client will never receive an acknowledgement from\n     * the server.\n     *\n     * @private\n     */\n    _clearAcks() {\n        Object.keys(this.acks).forEach((id) => {\n            const isBuffered = this.sendBuffer.some((packet) => String(packet.id) === id);\n            if (!isBuffered) {\n                // note: handlers that do not accept an error as first argument are ignored here\n                const ack = this.acks[id];\n                delete this.acks[id];\n                if (ack.withError) {\n                    ack.call(this, new Error(\"socket has been disconnected\"));\n                }\n            }\n        });\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    this.onconnect(packet.data.sid, packet.data.pid);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n        if (this._pid && args.length && typeof args[args.length - 1] === \"string\") {\n            this._lastOffset = args[args.length - 1];\n        }\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowledgement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (typeof ack !== \"function\") {\n            return;\n        }\n        delete this.acks[packet.id];\n        // @ts-ignore FIXME ack is incorrectly inferred as 'never'\n        if (ack.withError) {\n            packet.data.unshift(null);\n        }\n        // @ts-ignore\n        ack.apply(this, packet.data);\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id, pid) {\n        this.id = id;\n        this.recovered = pid && this._pid === pid;\n        this._pid = pid; // defined only if connection state recovery is enabled\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n        this._drainQueue(true);\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually. In that case, the socket will not try to reconnect.\n     *\n     * If this is the last active Socket instance of the {@link Manager}, the low-level connection will be closed.\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   // console.log(reason); prints \"io client disconnect\"\n     * });\n     *\n     * socket.disconnect();\n     *\n     * @return self\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for {@link disconnect()}.\n     *\n     * @return self\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @example\n     * socket.compress(false).emit(\"hello\");\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @example\n     * socket.volatile.emit(\"hello\"); // the server may or may not receive it\n     *\n     * @returns self\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * @example\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     *\n     * @returns self\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @example\n     * socket.onAny((event, ...args) => {\n     *   console.log(`got ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @example\n     * socket.prependAny((event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * }\n     *\n     * socket.onAny(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAny(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAny();\n     *\n     * @param listener\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * }\n     *\n     * socket.onAnyOutgoing(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAnyOutgoing(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAnyOutgoing();\n     *\n     * @param [listener] - the catch-all listener (optional)\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { Socket as Engine, installTimerFunctions, nextTick, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        if (!v) {\n            this.skipReconnect = true;\n        }\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        const onError = (err) => {\n            this.cleanup();\n            this._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                this.maybeReconnectOnOpen();\n            }\n        };\n        // emit `error`\n        const errorSub = on(socket, \"error\", onError);\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                onError(new Error(\"timeout\"));\n                socket.close();\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), \n        // @ts-ignore\n        on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        try {\n            this.decoder.add(data);\n        }\n        catch (e) {\n            this.onclose(\"parse error\", e);\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        // the nextTick call prevents an exception in a user-provided event listener from triggering a disconnection due to a \"parse error\"\n        nextTick(() => {\n            this.emitReserved(\"packet\", packet);\n        }, this.setTimeoutFn);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        else if (this._autoConnect && !socket.active) {\n            socket.connect();\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called when:\n     *\n     * - the low-level engine is closed\n     * - the parser encountered a badly formatted packet\n     * - all sockets are disconnected\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        var _a;\n        this.cleanup();\n        (_a = this.engine) === null || _a === void 0 ? void 0 : _a.close();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\nexport { Fetch, NodeXHR, XHR, NodeWebSocket, WebSocket, WebTransport, } from \"engine.io-client\";\n"],"names":["url","uri","path","loc","obj","location","protocol","host","charAt","test","parse","port","ipv6","indexOf","id","href","on","ev","fn","subDestroy","off","RESERVED_EVENTS","Object","freeze","connect","connect_error","disconnect","disconnecting","newListener","removeListener","Socket","Emitter","constructor","io","nsp","opts","connected","recovered","receiveBuffer","sendBuffer","_queue","_queueSeq","ids","acks","flags","auth","_opts","assign","_autoConnect","open","disconnected","subEvents","subs","onopen","bind","onpacket","onerror","onclose","active","_readyState","send","args","unshift","emit","apply","_a","_b","_c","hasOwnProperty","Error","toString","retries","fromQueue","volatile","_addToQueue","packet","type","PacketType","EVENT","data","options","compress","length","ack","pop","_registerAckCallback","isTransportWritable","engine","transport","writable","isConnected","_hasPingExpired","discardPacket","notifyOutgoingListeners","push","timeout","ackTimeout","undefined","timer","setTimeoutFn","i","splice","call","clearTimeoutFn","withError","emitWithAck","Promise","resolve","reject","arg1","arg2","tryCount","pending","err","responseArgs","hasError","shift","_drainQueue","force","_packet","_sendConnectPacket","CONNECT","_pid","pid","offset","_lastOffset","emitReserved","reason","description","_clearAcks","keys","forEach","isBuffered","some","String","sameNamespace","sid","onconnect","BINARY_EVENT","onevent","ACK","BINARY_ACK","onack","DISCONNECT","ondisconnect","CONNECT_ERROR","destroy","message","emitEvent","_anyListeners","listeners","slice","listener","self","sent","emitBuffered","close","onAny","prependAny","offAny","listenersAny","onAnyOutgoing","_anyOutgoingListeners","prependAnyOutgoing","offAnyOutgoing","listenersAnyOutgoing","Backoff","ms","min","max","factor","jitter","attempts","prototype","duration","Math","pow","rand","random","deviation","floor","reset","setMin","setMax","setJitter","Manager","nsps","installTimerFunctions","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","Encoder","decoder","Decoder","autoConnect","v","arguments","_reconnection","skipReconnect","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","maybeReconnectOnOpen","_reconnecting","reconnect","Engine","socket","openSubDestroy","onError","cleanup","errorSub","autoUnref","unref","onping","ondata","ondecoded","add","e","nextTick","_destroy","_close","encodedPackets","encode","write","delay","onreconnect","attempt","cache","lookup","parsed","source","newConnection","forceNew","multiplex","query","queryKey"],"mappings":"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CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACQ,IAAI,CAACC,SAAS,GAAG,KAAK;AACtB;AACR;AACA;AACA;IACQ,IAAI,CAACC,SAAS,GAAG,KAAK;AACtB;AACR;AACA;IACQ,IAAI,CAACC,aAAa,GAAG,EAAE;AACvB;AACR;AACA;IACQ,IAAI,CAACC,UAAU,GAAG,EAAE;AACpB;AACR;AACA;AACA;AACA;AACA;IACQ,IAAI,CAACC,MAAM,GAAG,EAAE;AAChB;AACR;AACA;AACA;IACQ,IAAI,CAACC,SAAS,GAAG,CAAC;IAClB,IAAI,CAACC,GAAG,GAAG,CAAC;AACZ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQ,IAAA,IAAI,CAACC,IAAI,GAAG,EAAE;AACd,IAAA,IAAI,CAACC,KAAK,GAAG,EAAE;IACf,IAAI,CAACX,EAAE,GAAGA,EAAE;IACZ,IAAI,CAACC,GAAG,GAAGA,GAAG;AACd,IAAA,IAAIC,IAAI,IAAIA,IAAI,CAACU,IAAI,EAAE;AACnB,MAAA,IAAI,CAACA,IAAI,GAAGV,IAAI,CAACU,IAAI;AACzB;IACA,IAAI,CAACC,KAAK,GAAGxB,MAAM,CAACyB,MAAM,CAAC,EAAE,EAAEZ,IAAI,CAAC;IACpC,IAAI,IAAI,CAACF,EAAE,CAACe,YAAY,EACpB,IAAI,CAACC,IAAI,EAAE;AACnB;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,IAAIC,YAAYA,GAAG;IACf,OAAO,CAAC,IAAI,CAACd,SAAS;AAC1B;AACA;AACJ;AACA;AACA;AACA;AACIe,EAAAA,SAASA,GAAG;IACR,IAAI,IAAI,CAACC,IAAI,EACT;AACJ,IAAA,MAAMnB,EAAE,GAAG,IAAI,CAACA,EAAE;AAClB,IAAA,IAAI,CAACmB,IAAI,GAAG,CACRpC,EAAE,CAACiB,EAAE,EAAE,MAAM,EAAE,IAAI,CAACo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","x_google_ignoreList":[0,1,2,3,4,5]}